package TheTOP9;

class rectangleVertex {
	int x;
	int y;

	public rectangleVertex(int x, int y) {
		this.x = x;
		this.y = y;
	}
}

class Rectangle {
	rectangleVertex topLeft;
	rectangleVertex bottomRight;

	public Rectangle(rectangleVertex topLeft, rectangleVertex bottomRight) {
		this.topLeft = topLeft;
		this.bottomRight = bottomRight;
	}
}

public class RectangleOverlapping {

	// important Special case : [(1,1),(3,3)]
	public boolean overlap(Rectangle a, Rectangle b) {
		// for the handling of special test case which rectangle points are
		// actually leftBottom and rightTop
		// change these points into leftTop and rightBottom
		// TODO
		// change [(1,1),(3,3)] into [(1,3),(3,1)]

		
		// 等于号
		if (a.topLeft.x >= b.bottomRight.x || a.topLeft.y <= b.bottomRight.y || a.bottomRight.x <= b.topLeft.x
				|| a.bottomRight.y >= b.topLeft.y) {
			System.out.println(false);
			return false;
		}
		// if the two rectangles are not detached then they are overlapped
		System.out.println(true);
		return true;
	}

	public static void main(String[] args) {
//		RectangleOverlapping overlapping = new RectangleOverlapping();
//		overlapping.overlap(new Rectangle(new rectangleVertex(1, 1), new rectangleVertex(3, 3)),
//				new Rectangle(new rectangleVertex(1, 3), new rectangleVertex(3, 1)));
		
		System.out.println(  Double.compare(0.1, 0.2)  );
		System.out.println( Integer.compare(1, 2));
//		System.out.println( String.compare(  ,  ));
		String aString = "";
		System.out.println(aString.compareTo("b"));
	}
}
