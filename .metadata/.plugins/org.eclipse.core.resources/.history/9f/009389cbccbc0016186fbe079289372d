
public class PocketGems_PhoneInterview_First_Missing_Positive {
	// time complexity O(n)
	public int firstMissingPositive(int[] nums) {
        if(nums == null || nums.length == 0){
            return 1;
        }
        
        int len = nums.length;
        
//        for(int i = 0; i < len; i++){
//            while(nums[i] >= 0 && nums[i] <= len && nums[i] != i + 1 && nums[i] != nums[nums[i] - 1]){
//                int temp = nums[nums[i] - 1];
//                nums[nums[i] - 1] = nums[i];
//                nums[i] = temp;
//            }
//            
//            for(int num : nums) {
//    			System.out.print(num + " ");
//    		}
//            System.out.println();
//            
//        }
//        
//        for(int i = 0; i < len; i++){
//            if(nums[i] != i + 1){
//                return i + 1;
//            }
//        }
        
        for(int i = 0; i < len; i++){
            while(nums[i] >= 0 && nums[i] <= len && nums[i] != i && nums[i] != nums[nums[i]]){
                int temp = nums[nums[i]];
                nums[nums[i]] = nums[i];
                nums[i] = temp;
            }
        }
        
        for(int i = 0; i < len; i++){
            if(nums[i] != i){
                return i;
            }
        }
        
        return len + 1;
    }
	
	public static void main(String[] args) {
		PocketGems_PhoneInterview_First_Missing_Positive t = new PocketGems_PhoneInterview_First_Missing_Positive();
		int[] nums = {2,0,-1,2,3};
		System.out.println(t.firstMissingPositive(nums));
		
		for(int num : nums) {
			System.out.print(num + " ");
		}
		
	}
}
