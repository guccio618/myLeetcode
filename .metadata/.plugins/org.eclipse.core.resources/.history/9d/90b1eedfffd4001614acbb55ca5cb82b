
public class Q463_Island_Perimeter {
	public int islandPerimeter(int[][] grid) {
        if(grid == null || grid.length == 0 || grid[0].length == 0) {
            return 0;
        }    
        
        int row = grid.length, col = grid[0].length;
        boolean[][] visited = new boolean[row][col];
        
        for(int i = 0; i < row; i++) {
            for(int j = 0; j < col; j++) {
                if(grid[i][j] == 1) {
                	System.out.println(i + " " + j);
                    return DFS(grid, visited, i, j);
                }
            }
        }
        
        return 0;
    }
    
    public int DFS(int[][] grid, boolean[][] visited, int x, int y) {
        if(visited[x][y]) {
            return 0;
        }
        
        visited[x][y] = true;
        int[] dx = {0, 0, 1, -1};
        int[] dy = {1, -1, 0, 0};
        int curCount = 0;
        
        for(int i = 0; i < 4; i++) {
            int newX = x + dx[i];
            int newY = y + dy[i];
            
            if(newX >= 0 && newX < grid.length && newY >= 0 && newY < grid[0].length && grid[newX][newY] == 1) {
                curCount += DFS(grid, visited, newX, newY);
            }
        }
        
        return curCount;
    }
    
    public int getGridPerimeter(int[][] grid, int x, int y) {
        int[] dx = {0, 0, 1, -1};
        int[] dy = {1, -1, 0, 0};
        int count = 0;
        
        for(int i = 0; i < 4; i++) {
            int newX = x + dx[i];
            int newY = y + dy[i];
            
            if(newX >= 0 && newX < grid.length && newY >= 0 && newY < grid[0].length && grid[newX][newY] == 1) {
                continue;
            } else {
                count++;
            }
        }
        
        return count;
    }
    
    
    
    
    
    
    
    
    
    
    
    
    /********************************** main function *************************************/
    
    public static void main(String[] args) {
    	Q463_Island_Perimeter t = new Q463_Island_Perimeter();
    	int[][] grid = {
    			{0,1,0,0},
    			{1,1,1,0},
    			{0,1,0,0},
    			{1,1,0,0}
    	};
    	
    	System.out.println(t.islandPerimeter(grid));
    }
}
