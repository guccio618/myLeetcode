class rectangleVertex {
	int x;
	int y;

	public rectangleVertex(int x, int y) {
		this.x = x;
		this.y = y;
	}
}

class Rectangle {
	rectangleVertex topLeft;
	rectangleVertex bottomRight;

	public Rectangle(rectangleVertex topLeft, rectangleVertex bottomRight) {
		this.topLeft = topLeft;
		this.bottomRight = bottomRight;
	}
}

public class RectangleOverlapping {

	// important Special case : [(1,1),(3,3)]
	// for the handling of special test case which rectangle points are
			// actually leftBottom and rightTop
			// change these points into leftTop and rightBottom
			// TODO
			// change [(1,1),(3,3)] into [(1,3),(3,1)]
	
	public boolean overlap(Rectangle a, Rectangle b) {
		if(a == null || b == null) {
			return true;
		}
		
		int topLeft_x1 = Math.min(a.topLeft.x, a.bottomRight.x);
		int topLeft_y1 = Math.max(a.topLeft.y, a.bottomRight.y);
		int bottomRight_x1 = Math.max(a.topLeft.x, a.bottomRight.x);
		int bottomRight_y1 = Math.min(a.topLeft.y, a.bottomRight.y);
		
		int topLeft_x2 = Math.min(b.topLeft.x, b.bottomRight.x);
		int topLeft_y2 = Math.max(b.topLeft.y, b.bottomRight.y);
		int bottomRight_x2 = Math.max(b.topLeft.x, b.bottomRight.x);
		int bottomRight_y2 = Math.min(b.topLeft.y, b.bottomRight.y);
		
		if(topLeft_x1 > bottomRight_x2 || topLeft_x2 > bottomRight_x1 || bottomRight_y1 > topLeft_y2 || bottomRight_y2 > topLeft_y1) {
			return true;
		} else {
			return false;
		}
	}
	
	public boolean overlap2(Rectangle a, Rectangle b) {
//		// 等于号
		if (a.topLeft.x >= b.bottomRight.x || a.topLeft.y <= b.bottomRight.y || a.bottomRight.x <= b.topLeft.x
				|| a.bottomRight.y >= b.topLeft.y) {
			System.out.println(false);
			return false;
		}
		// if the two rectangles are not detached then they are overlapped
		System.out.println(true);
		return true;
	}

	public static void main(String[] args) {
		RectangleOverlapping overlapping = new RectangleOverlapping();
		System.out.println(overlapping.overlap(new Rectangle(new rectangleVertex(1, 1), new rectangleVertex(3, 3)),
				new Rectangle(new rectangleVertex(1, 3), new rectangleVertex(3, 1))));
		
		System.out.println(overlapping.overlap2(new Rectangle(new rectangleVertex(1, 1), new rectangleVertex(3, 3)),
				new Rectangle(new rectangleVertex(1, 3), new rectangleVertex(3, 1))));
		
//		System.out.println(  Double.compare(0.1, 0.2)  );
//		System.out.println( Integer.compare(1, 2));
////		System.out.println( String.compare(  ,  ));
//		String aString = "";
//		System.out.println(aString.compareTo("b"));
	}
}
