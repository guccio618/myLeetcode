
public class Amazon_OA2_Longest_Palindromic_Substring {
	public String longestPalindrome(String s) {
		if(s == null || s.length() == 0){
			return "";
		} else if(s.length() == 1){
			return s;
		}
		
		int len = s.length();
		int maxLen = 0;
		int startPos = 0;
		
		for(int i = 0; i < len - 1; i++){
			int left = i, right = i;
			
			while(left >= 0 && right < len){
				if(s.charAt(left) != s.charAt(right)){
					break;
				} else {
					left--;
					right++;
				}
			}
			
			if(maxLen < right - left - 1){
				maxLen = right - left - 1;
				startPos = left + 1;
			}
			
			left = i;
			right = i + 1;
			
			while(left >= 0 && right < len){
				if(s.charAt(left) != s.charAt(right)){
					break;
				} else {
					left--;
					right++;
				}
			}
			
			if(maxLen < right - left - 1){
				maxLen = right - left - 1;
				startPos = left + 1;
			}
		}
		
		return s.substring(startPos, startPos + maxLen);
	}
}
