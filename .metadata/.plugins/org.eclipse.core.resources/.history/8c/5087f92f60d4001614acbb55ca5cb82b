
public class Q406_Queue_Reconstruction_by_Height {
	public int[][] reconstructQueue(int[][] people) {
        if(people == null || people.length == 0 || people[0].length == 0) {
            return new int[0][0];
        }
        
        Arrays.sort(people, new Comparator<int[]>() {
            @Override
            public int compare(int[] nums1, int[] nums2) {
                if(nums1[0] != nums2[0]) {
                    return nums2[0] - nums1[0];
                } else {
                    return nums1[1] - nums2[1];
                }
            }
        });
        
        List<int[]> ans = new ArrayList<>();
        
        for(int[] elem : people) {
            if(elem[1] >= ans.size()) {
                ans.add(elem);
            } else {
                ans.add(elem[1], elem);
            }
        }
        
        return ans.toArray(new int[people.length][]);
    }
}
